# DESIGN

Based on discussions from 

* <http://groups.google.com/group/slurm-devel/browse_frm/thread/1c8805fb274c108f#>
* <http://groups.google.com/group/slurm-devel/browse_thread/thread/b06f3985cc7504b2?tvc=2>

# Requirements

This documentation assumes the user knows basic slurm administration.

Slurmdbd must be configured and working, account enforcing is enabled
in *slurm.conf*

    AccountingStorageEnforce=limits

The following parameters must also be set, we do not want a decay or
reset of the usage that is recorded in slurmdbd.

    PriorityDecayHalfLife=0
    PriorityUsageResetPeriod=NONE

What is also required is a pretty good estimate of the total available
cpu hours that you have on your cluster that you can allocate to
accounts.

Users will need to learn how to use accounts (nothing new here).

sacctmgr and sshare is required and must be working.

# How it works

Time is deposited to an account, which gets drawn from whenever a job
is submitted to the cluster. Currently the "GrpCPUMins" is used.

Note that there is no concept of 'Reserved' time, like Gold does. This 
is probably a good thing - as the Gold way of doing it sometimes leads
to Reserved time getting stuck, and never released. The Slurm way seems
to only subtract time when the jobs are actually running.

A consequence of this is that it will kill jobs mid-run (say if another
user in the Account uses up all the time first) - again, probably not
a bad thing.

## Time period

The tools work with hours as the time unit (conversions are done where
needed).

## Note

It *seems* that the slurmctld must be restarted sometimes - for new
Accounts or Account updates. This needs to be checked more (it may not
be the case).

# Missing components

* Helper script to add/remove hours from a given account (short of
  manually doing it by hand and doing the sums). (This is somewhat
  done as [[sbank-deposit]])
* And to add/remove users from an Account. (see below with gchproject
  idea).
* Ability to *end* accounts at a given date, could associate accounts
  with overlapping reservations. We tried this but we can't set a
  *maint* reservation that is honoured by slurm. So this is a no go
  for now. One idea is to do it with an external database and some
  helper scripts (done via crontab or something similar).
    * Note that setting GrpCPUMins to 0 can be used to do this - to put
      an end on the account.  
    * One idea is to do this offline with an external database and a
      handful of scripts.
* This was mainly conceived as a Gold (bank) replacement, if we ditch maui,
  what other functionality will users miss? Have a 'showq' and 'checkjob'
  wrapper?
* some additional commands/wrapper scripts to mimic GOLD
 * wrapper script for creating accounts (gmkproject like command),
   default behaviour should create accounts associated with a default
   root account and allow the user to define a parent account if
   necessary.
 * wrapper script for adding/deleting users from (gchproject like command)
 * wrapper script for making users (gmkuser), do we need to create
   users in slurmdbd before associating users with projects/accounts.

# TODO for the script

* Re-write using Slurm-Perl API

# Tested on

* SLURM 2.2.0
* SL5x (and system version of perl/sh)
