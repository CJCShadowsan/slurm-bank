# Requires sacctmgr and scontrol

usage() 
{
	echo "usage: sbank cluster"
	echo "       sbank cluster list -a"
	echo "       sbank cluster cpupernode -m"
}

parse_args() {
        # parse options
        FLAGS "$@" || exit $?
        eval set -- "${FLAGS_ARGV}"
}

cmd_default() 
{
	cmd_list "$@"
}

cmd_list()
{
	# define some variables
	debug "define some variables"
	DEFINE_boolean 'all' false 'show all clusters' 'a'

	FLAGS_PARENT="sbank cluster"	

	# parse the command line
	debug "parse command line"
	parse_args "$@"

	if [ ${FLAGS_all} -eq ${FLAGS_TRUE} ];
	then
		$SACCTMGR_BIN -n list cluster format=cluster | sed -e 's/^ *//g;s/ *$//g'
	else
		$SCONTROL_BIN show config | grep -i clustername | awk -F'=' '{print $2}' | sed -e 's/^ *//g;s/ *$//g'
	fi
} 	

cmd_cpupernode() {
	local cpus

	# define some variables
	debug "define some variables"
	DEFINE_boolean 'min' false 'return lowest value of cpu per node' 'm'

	FLAGS_PARENT="sbank cluster cpupernode"

	# parse the command line
	debug "parse command line"
	parse_args "$@"

	if [ ${FLAGS_min} -eq ${FLAGS_TRUE} ];
	then
		opts="-n"
	else
		opts="-nr"
	fi
	cpus=$( $SINFO_BIN -h --format "%c %P"  | sort $opts | head -1 | awk '{print $1}' )
	# should probably test to see if this is an integer number or not
	echo $cpus
}

cmd_help()
{
	usage
	exit 0
}
